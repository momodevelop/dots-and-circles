// $0 = array name
// $1 = type name
// $2 = function prefix

struct $0 {
    u32 Count;
    $1* E;
};


static inline $0
$2CreateFromMemory($1* E, u32 Count) {
    $0 Ret = {};
    Ret.E = E;
    Ret.Count = Count;

    return Ret;
}

static inline $0
$2CreateFromArena(arena* Arena, u32 Count) {
    $1* Buffer = Arena_PushArray($1, Arena, Count);
    return $2CreateFromMemory(Buffer, Count);
    
}


static inline void
$2Reverse($0* Dest) {
    for (u32 I = 0; I < Dest->Count/2; ++I) {
        Swap(&Dest->E[I], &Dest->E[Dest->Count-1-I]);
    }
}



