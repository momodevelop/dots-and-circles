// Generated by Codegen
#ifndef ARRAY_ENEMY
#define ARRAY_ENEMY
// array_enemy = array name
// enemy = type name
// ArrayEnemy_ = function prefix

struct array_enemy {
    u32 Count;
    enemy* E;
};


static inline array_enemy
ArrayEnemy_CreateFromMemory(enemy* E, u32 Count) {
    array_enemy Ret = {};
    Ret.E = E;
    Ret.Count = Count;

    return Ret;
}

static inline array_enemy
ArrayEnemy_CreateFromArena(arena* Arena, u32 Count) {
    enemy* Buffer = Arena_PushArray(enemy, Arena, Count);
    return ArrayEnemy_CreateFromMemory(Buffer, Count);
    
}


static inline void
ArrayEnemy_Reverse(array_enemy* Dest) {
    for (u32 I = 0; I < Dest->Count/2; ++I) {
        Swap(&Dest->E[I], &Dest->E[Dest->Count-1-I]);
    }
}



#endif