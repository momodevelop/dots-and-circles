// Generated by Codegen
#ifndef ARRAY_DEBUG_VARIABLE
#define ARRAY_DEBUG_VARIABLE
// array_debug_variable = array name
// debug_variable = type name
// ArrayDebugVariable_ = function prefix

struct array_debug_variable {
    u32 Count;
    debug_variable* E;
};


static inline array_debug_variable
ArrayDebugVariable_CreateFromMemory(debug_variable* E, u32 Count) {
    array_debug_variable Ret = {};
    Ret.E = E;
    Ret.Count = Count;

    return Ret;
}

static inline array_debug_variable
ArrayDebugVariable_CreateFromArena(arena* Arena, u32 Count) {
    debug_variable* Buffer = Arena_PushArray(debug_variable, Arena, Count);
    return ArrayDebugVariable_CreateFromMemory(Buffer, Count);
    
}


static inline void
ArrayDebugVariable_Reverse(array_debug_variable* Dest) {
    for (u32 I = 0; I < Dest->Count/2; ++I) {
        Swap(&Dest->E[I], &Dest->E[Dest->Count-1-I]);
    }
}



#endif