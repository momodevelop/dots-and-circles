// Generated by Codegen
#ifndef ARRAY_GLUINT
#define ARRAY_GLUINT
// array_gluint = array name
// GLuint = type name
// ArrayGLuint_ = function prefix

struct array_gluint {
    u32 Count;
    GLuint* E;
};


static inline array_gluint
ArrayGLuint_CreateFromMemory(GLuint* E, u32 Count) {
    array_gluint Ret = {};
    Ret.E = E;
    Ret.Count = Count;

    return Ret;
}

static inline array_gluint
ArrayGLuint_CreateFromArena(arena* Arena, u32 Count) {
    GLuint* Buffer = Arena_PushArray(GLuint, Arena, Count);
    return ArrayGLuint_CreateFromMemory(Buffer, Count);
    
}


static inline void
ArrayGLuint_Reverse(array_gluint* Dest) {
    for (u32 I = 0; I < Dest->Count/2; ++I) {
        Swap(&Dest->E[I], &Dest->E[Dest->Count-1-I]);
    }
}



#endif